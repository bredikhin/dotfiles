" NeoBundle Scripts {{{
" Note: Skip initialization for vim-tiny or vim-small.
if !1 | finish | endif

if has('vim_starting')
  if &compatible
    set nocompatible " Be iMproved
  endif

  " Required:
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

" Required:
call neobundle#begin(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

" My Bundles here:
NeoBundle 'Shougo/neobundle.vim'
NeoBundle 'scrooloose/nerdtree'
NeoBundle 'jistr/vim-nerdtree-tabs'
NeoBundle 'henrik/vim-indexed-search'
NeoBundle 'bling/vim-airline'
NeoBundle 'nanotech/jellybeans.vim'
NeoBundle 'mtth/scratch.vim'

call neobundle#end()

" Required:
filetype plugin indent on

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck
" }}}

" Plugin Options {{{
" scrooloose/nerdtree {{{
map <c-t> :NERDTreeToggle<CR>
let NERDTreeHijackNetrw=1 "Put Nerdtree into a window
let g:nerdtree_tabs_open_on_gui_startup = 0
"  }}}

" bling/vim-airline {{{
" Always show statusbar
set laststatus=2

" Show PASTE if in paste mode
let g:airline_detect_paste=1

" Show airline for tabs too
let g:airline#extensions#tabline#enabled=1

" Show just the filename
let g:airline#extensions#tabline#fnamemod=':t'
" }}}

" nanotech/jellybeans.vim {{{
colorscheme jellybeans
" }}}

" mtth/scratch.vim {{{
let g:scratch_persistence_file="~/.vim/scratch"
" }}}

" }}}

" Non-plugin Stuff {{{
let mapleader = ","
set encoding=utf-8
set backspace=indent,eol,start
set ruler
set showcmd
set incsearch
set hlsearch
set hidden
set history=100
set autoread
set splitright
set splitbelow
set lazyredraw
set modelines=1
set spell spelllang=en_us
set cursorline
set clipboard=unnamed

" Mouse
set ttyfast
" set mouse=a

" Scrolling
set scrolloff=10
set sidescrolloff=15
set sidescroll=1

" Completion
set wildmode=longest,list,full
set wildmenu                    " Enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~     " Stuff to ignore when tab completing
set wildignore+=*vim/backups*

" Folding
set foldmethod=indent
set foldnestmax=3
set nofoldenable
nnoremap <space> za
vnoremap <space> zf

" Move vertically by visual line
nnoremap j gj
nnoremap k gk

" Highlight last inserted text
nnoremap gV `[v`]

" Remember the last position in a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" Group swap and backup files
set backupdir=./.backup,~/.backup,.,/tmp
set dir=~/tmp
" }}}

" Bindings {{{
" Open a new empty buffer
nmap <leader>T :enew<cr>

" Move to the next buffer
nmap <leader>l :bnext<CR>

" Move to the previous buffer
nmap <leader>h :bprevious<CR>

" Close the current buffer and move to the previous one
nmap <leader>bq :bp <BAR> bd #<CR>

" Show all open buffers and their status
nmap <leader>bl :ls<CR>

" Close all the open buffers
nmap <leader>z :bufdo bd<CR>

" Refresh .vimrc
map <leader>rr :source ~/.vimrc<CR>

" Edit .vimrc files
nmap <leader>v :args ~/.vimrc*<CR>

" ESC
inoremap jj <ESC>

" Fixed n/N search direction
nnoremap <expr> n  'Nn'[v:searchforward]
nnoremap <expr> N  'nN'[v:searchforward]

" Keep selection after the shift
xnoremap <  <gv
xnoremap >  >gv
" }}}

" Editor-specific settings {{{
if has('gui_macvim')
  source ~/.vimrc.prose
else
  source ~/.vimrc.code
endif
" }}}

" vim:foldenable:foldmethod=marker:foldlevel=0
